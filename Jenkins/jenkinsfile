pipeline {
    agent none
    environment {
        PATH = "/opt/apache-maven-3.9.4/bin:$PATH"
    }
    stages {
        stage("Prepare Environment") {
            agent {
                docker {
                    image 'openjdk:8' // Specify the base image
                    args '-v /var/run/docker.sock:/var/run/docker.sock'
                }
            }
            steps {
                sh 'echo "Preparing environment"'
                sh 'docker info'
            }
        }
        stage("Build") {
            agent {
                node {
                    label 'maven'
                }
            }
            steps {
                echo "------------------ build started -----------------"
                sh 'mvn clean deploy -Dmaven.test.skip=true'
                echo "------------------ build completed -----------------"
            }
        }
        
        stage("Test") {
            steps {
                echo "------------------ unit test started -----------------"
                sh 'mvn surefire-report:report'
                echo "------------------ unit test Completed -----------------"
            }
        }

        stage('SonarQube Analysis') {
            environment {
                scannerHome = tool 'galaxy-sonar-scanner'
            }
            steps {
                withSonarQubeEnv('galaxy-sonarqube-server') {
                    sh "${scannerHome}/bin/sonar-scanner"
                }
            }
        }

        stage("Quality Gate") {
            steps {
                script {
                    timeout(time: 1, unit: 'HOURS') {
                        def qg = waitForQualityGate() 
                        if (qg.status != 'OK') {
                            error "Pipeline aborted due to quality gate failure: ${qg.status}"
                        }
                    }
                }
            }
        }
    }
}
